JsonParser {
    file = document:x s !. -> x
    document = string | true | false | null | number | list | dict
    string = s '"' #:s char*:xs #:e '"' -> ["String" range(s e) {xs}]
    true = s #:s 'true' #:e -> ["True" range(s e)]
    false = s #:s 'false' #:e -> ["False" range(s e)]
    null = s #:s 'null' #:e -> ["Null" range(s e)]
    number = s #:s digit:x digit*:xs #:e -> ["Number" range(s e) int({[x ~xs]})]
    digit = '0'-'9'
    list = s '[' items:x s ']' -> ["List" ~x]
    items = document:x (s ',' document)*:xs -> [x ~xs] | -> []
    dict = s #:s '{' dictItems:x s '}' #:e -> ["Dict" range(s e) ~x]
    dictItems = dictItem:x (s ',' dictItem)*:xs -> [x ~xs] | -> []
    dictItem = key:x s ':' document:y -> ["Entry" x y]
    key = s '"' #:s char*:xs #:e '"' -> ["Key" range(s e) {xs}]
    char = !'"' .
    s = (' ' | '\n')*
}

JsonPrettyPrinter {
    pretty = %:x !.
        -> []:prefix
        -> tokens(x)
    prettyInner = [%:x !.] -> x
    prettyInnerList =
        prettyInner:x (prettyInner:y newline:n
            -> [token("text" {"," n}) ~y]
        )*:xs -> [~x ~~xs]
        | -> []
    Dict = . prettyInnerList:x newline:n !.
        -> token("text" {n "}"}):end
        -> ["    " ~prefix]:prefix
        -> [token("text" { "{" n }) ~x end]
    Entry = prettyInner:key prettyInner:value -> [
        ~key token("text" ": ") ~value
    ]
    Number = . .:value -> [token("number" { value })]
    List = prettyInnerList:x newline:n !.
        -> token("text" {n "]"}):end
        -> ["    " ~prefix]:prefix
        -> [token("text" { "[" n }) ~x end ]
    True = . -> [token("bool" "true")]
    False = . -> [token("bool" "false")]
    Null = . -> [token("null" "null")]
    Key = . .:value -> [token("string" {"\"" value "\""})]
    String = . .:value -> [token("string" {"\"" value "\""})]
    newline = -> { "\n" prefix }
}
